"""add_copr_fulltext

Revision ID: 3a035889852c
Revises: 3c3cce7a5fe0
Create Date: 2013-02-01 10:06:37.034495

"""

# revision identifiers, used by Alembic.
revision = '3a035889852c'
down_revision = '3c3cce7a5fe0'

from alembic import op
import sqlalchemy as sa
from sqlalchemy import types
from sqlalchemy.ext import compiler


class Tsvector(types.UnicodeText):
    pass


@compiler.compiles(Tsvector, 'postgresql')
def compile_tsvector(element, compiler, **kw):
    return 'tsvector'


@compiler.compiles(Tsvector, 'sqlite')
def compile_tsvector(element, compiler, **kw):
    return 'text'


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.add_column('copr', sa.Column('copr_ts_col', Tsvector(), nullable=True))
    op.create_index(
        'copr_ts_idx', 'copr', ['copr_ts_col'], postgresql_using='gin')

    session = sa.orm.sessionmaker(bind=op.get_bind())()
    metadata = sa.MetaData()
    if op.get_bind().dialect.name == 'postgresql':
        op.execute("UPDATE copr \
                    SET copr_ts_col = to_tsvector('pg_catalog.english', coalesce(name, '') || ' ' || \
                        coalesce(description, '') || ' ' || coalesce(instructions, ''))")
        # no need to coalesce here, the trigger doesn't need it
        op.execute("CREATE TRIGGER copr_ts_update BEFORE INSERT OR UPDATE \
                    ON copr \
                    FOR EACH ROW EXECUTE PROCEDURE \
                    tsvector_update_trigger(copr_ts_col, 'pg_catalog.english', name, description, instructions);")
    elif op.get_bind().dialect.name == 'sqlite':
        op.execute("UPDATE copr \
                    SET copr_ts_col = coalesce(name, '') || ' ' || \
                        coalesce(description, '') || ' ' || coalesce(instructions, '')")
        # two triggers for sqlite...
        op.execute("CREATE TRIGGER copr_ts_update \
                    AFTER UPDATE OF name, description, instructions \
                    ON copr \
                    FOR EACH ROW \
                    BEGIN \
                    UPDATE copr SET copr_ts_col = coalesce(name, '') || ' ' || \
                                                  coalesce(description, '') || ' ' || coalesce(instructions, ''); \
                    END;")
        op.execute("CREATE TRIGGER copr_ts_insert \
                    AFTER INSERT \
                    ON copr \
                    FOR EACH ROW \
                    BEGIN \
                    UPDATE copr SET copr_ts_col = coalesce(name, '') || ' ' || \
                                                  coalesce(description, '') || ' ' || coalesce(instructions, ''); \
                    END;")
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('copr', 'copr_ts_col')
    if op.get_bind().dialect.name == 'postgresql':
        op.execute("DROP TRIGGER copr_ts_update ON copr")
    ### end Alembic commands ###
