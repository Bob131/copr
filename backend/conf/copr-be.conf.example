[backend]

# URL where are results visible
# default is http://copr
results_baseurl=https://copr-be.cloud.fedoraproject.org/results

# default is http://coprs/rest/api
frontend_base_url=http://copr-fe-dev.cloud.fedoraproject.org

# must have same value as BACKEND_PASSWORD from have frontend in /etc/copr/copr.conf
# default is PASSWORDHERE but you really should change it. really.
frontend_auth=backend_password_from_fe_config

dist_git_url=distgitvm.example.com

# Set a number of build groups (default is 1)
build_groups=1

# For each build group set:
#   name - name of the group (will be shown in the worker process name)
#   archs - architectures to build by this group
#   spawn_playbook - path to an ansible playbook which spawns a builder
#   terminate_playbook - path to an ansible playbook to terminate the builder
#   max_vm_total - maximum number of VM which can run in parallel
#   max_vm_per_user - maximum number of VM which can use one user in parallel
#   max_spawn_processes=2 - max number of spawning playbooks run in parallel
#   vm_spawn_min_interval=30 - after you spin up one VM wait this number of seconds
#   vm_dirty_terminating_timeout=12 - if user do not reuse VM within this number second then VM is terminated
#   vm_health_check_period=120 - every X seconds try to check if VM is still alive
#   vm_health_check_max_time=300 - after this number seconds is not alive it is marked as failed
#   vm_max_check_fails=2 - when machine is consequently X times marked as failed then it is terminated
#   vm_terminating_timeout=600 - when machine was terminated and terminate PB did not finish within this number of second, we will run the PB once again.
#
#   Use prefix groupX where X is number of group starting from zero.
#   Warning: any arch should be used once, so no two groups to build the same arch
# 
# Example: (and also default values)
#   group0_name=PC
#   group0_archs=i386,x86_64
#   group0_spawn_playbook=/srv/copr-work/provision/builderpb-PC.yml
#   group0_terminate_playbook=/srv/copr-work/provision/terminatepb-PC.yml
group0_name=PC
group0_archs=i386,x86_64
group0_spawn_playbook=/srv/copr-work/provision/builderpb-PC.yml
group0_terminate_playbook=/srv/copr-work/provision/terminatepb-PC.yml
group0_max_vm_total=2

# directory where results are stored
# should be accessible from web using 'results_baseurl' URL
# no default
destdir=/var/lib/copr/public_html/results

# how long (in seconds) backend should wait before query frontends
# for new tasks in queue
# default is 10
sleeptime=30

# Builder machine allocation is done by resalloc server listening on
# this address.
#resalloc_connection=http://localhost:49100

# Maximum number of concurrent background builder processes.  Note that
# the background process doesn't have the builder machine allocated all
# the time but only as long as really needed.  To control the number of
# builder machines please configure resalloc server, see the
# 'resalloc_connection' config option.
# This option basically controls the amount of RAM allocated for
# processing builds on copr backend, and how many resalloc tickets can
# be taken at the same time.
#builds_max_workers=60

# Maximum number of concurrently running tasks per architecture.
#builds_max_workers_arch=x86_64=10,ppc64le=12

# Maximum number of concurrently running tasks per project owner.
#builds_max_workers_owner=20

# Maximum number of concurrently running tasks per build sandbox.
#builds_max_workers_sandbox=10

# Maximum number of concurrent background processes spawned for handling
# actions.
#actions_max_workers=10

# exit on worker failure
# default is false
#exit_on_worker=false

# publish fedmsg notifications from workers if true
# default is false
#fedmsg_enabled=false


# enable package signing, require configured
# signer host and correct /etc/sign.conf
# do_sign=false

# host or ip of machine with copr-keygen
# usually the same as in /etc/sign.conf
# keygen_host=example.com

# minimum age for builds to be pruned
prune_days=14

# logging settings
# log_dir=/var/log/copr-backend/
# log_level=info
# log_format=[%(asctime)s][%(levelname)6s][PID:%(process)d][%(name)10s][%(filename)s:%(funcName)s:%(lineno)d] %(message)s

# verbose=False

#redis_host=127.0.0.1
#redis_port=6379
#redis_db=0

[builder]
# default is 1800
timeout=3600

# consecutive_failure_threshold=10
