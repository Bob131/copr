#!/bin/sh

HELLO=https://pagure.io/copr/copr-test-sources/raw/master/f/hello-2.8-1.src.rpm
EVIL_HELLO=https://pagure.io/copr/copr-test-sources/raw/master/f/evilhello-2.8-2.src.rpm
SRPM_BUILDTAG=https://pagure.io/copr/copr-test-sources/raw/master/f/buildtag-0-0.src.rpm
COPR_HELLO_GIT=https://pagure.io/copr/copr-hello.git
COPR_HELLO_2_GIT=https://pagure.io/copr/copr-hello-2.git
DNF_COPR_ID=tested-copr

parse_build_id()
{
   local id
   id=$(grep 'Created builds:' "$rlRun_LOG" | sed 's/.* //')
   test -n "$id" || return 1
   export BUILD_ID=$id
}

quote_args()
{
    quote_args_result=
    __qa_space=
    for __qa_arg; do
        quote_args_result+=$__qa_space$(printf %q "$__qa_arg")
        __qa_space=' '
    done
}

cleanAction()
{
    quote_args "$@"

    if $COPR_CLEANUP; then
        rlRun "$quote_args_result"
    else
        rlLogInfo "Cleanup disabled, run manually: $quote_args_result"
    fi
}

# cleanProject [PROJECT]
# ----------------------
# When called without PROJECT, project with name $PROJECT is deleted.
cleanProject()
{
    _to_delete=$1
    test $# -eq 0 && _to_delete=$PROJECT
    cleanAction copr-cli delete "$_to_delete"
}

workdirSetup()
{
    rlRun "WORKDIR=\$(mktemp -d)" 0 'Creating working directory'
    rlRun "pushd $WORKDIR"
}

workdirCleanup()
{
    rlRun 'popd'
    rlRun "rm -r \$WORKDIR" 0 "Removing working directory"
}

setupProjectName()
{
    _name=$NAME_PREFIX-$1
    _project=$NAME_VAR-$1
    rlRun "PROJECT=$_name" 0 "Setting project name to $_name"
    rlRun "PROJECTNAME=$_project" 0 "Setting project name to $_project"
}

repo_owner()
{
    case $OWNER in
    *@*) echo "group_$OWNER" ;;
    *) echo "$OWNER" ;;
    esac
}

build_id_with_leading_zeroes()
{
    printf "%08d" "$BUILD_ID"
}
