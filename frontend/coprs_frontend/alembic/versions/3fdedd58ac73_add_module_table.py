"""add module table

Revision ID: 3fdedd58ac73
Revises: 414a86b37a0f
Create Date: 2016-10-26 22:01:09.361070

"""

# revision identifiers, used by Alembic.
revision = '3fdedd58ac73'
down_revision = '414a86b37a0f'

from alembic import op
import sqlalchemy as sa

from coprs.models import Module, Action, Copr, User, Group
from sqlalchemy.orm import sessionmaker

import json
import base64
import modulemd
from coprs.logic.coprs_logic import CoprsLogic


def upgrade():
    bind = op.get_bind()
    Session = sessionmaker()
    session = Session(bind=bind)

    Module.__table__.create(bind)
    session.commit()

    all_coprs = session.query(Copr)
    added_modules = set()

    for action in Action.query.filter(Action.action_type==9).all():
        data = json.loads(action.data)
        yaml = base64.b64decode(data["modulemd_b64"])
        mmd = modulemd.ModuleMetadata()
        mmd.loads(yaml)

        if data["ownername"][0] == "@":
            coprs = CoprsLogic.filter_by_group_name(all_coprs, data["ownername"][1:])
        else:
            coprs = CoprsLogic.filter_by_user_name(all_coprs, data["ownername"])
        copr = CoprsLogic.filter_by_name(coprs, data["projectname"]).first()

        kwargs = {
            "name": mmd.name,
            "version": mmd.version,
            "release": mmd.release,
            "summary": mmd.summary,
            "description": mmd.description,
            "yaml_b64": data["modulemd_b64"],
            "created_on": action.created_on,

            "copr_id": copr.id,
            "user_id": copr.user_id,
        }

        if full_module_name(mmd, copr.owner_name) in added_modules:
            print("Skipping {}; Already exists".format(full_module_name(mmd, copr.owner_name)))
            continue

        session.add(Module(**kwargs))
        added_modules.add(full_module_name(mmd, copr.owner_name))


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('module')
    ### end Alembic commands ###


def full_module_name(mmd, ownername):
    return "{}/{}-{}-{}".format(ownername, mmd.name, mmd.version, mmd.release)
