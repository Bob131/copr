"""new table Packages

Revision ID: 552455e5910e
Revises: 450fe5f7942d
Create Date: 2015-07-07 12:19:28.536592

"""

# revision identifiers, used by Alembic.
revision = '552455e5910e'
down_revision = '450fe5f7942d'

from alembic import op
import sqlalchemy as sa
from rpmUtils.miscutils import splitFilename
import os

def parse_package_name(pkg):
    if pkg.count(".") >= 3 and pkg.count("-") >= 2:
        return splitFilename(pkg)[0]
    # doesn"t seem like valid pkg string, try to guess package name
    result = ""
    pkg = pkg.replace(".rpm", "").replace(".src", "")
    for delim in ["-", "."]:
        if delim in pkg:
            parts = pkg.split(delim)
            for part in parts:
                if any(map(lambda x: x.isdigit(), part)):
                    return result[:-1]
                result += part + "-"
            return result[:-1]
    return pkg

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('package',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('source_type', sa.Integer(), nullable=True),
    sa.Column('source_json', sa.Text(), nullable=True),
    sa.Column('copr_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['copr_id'], ['copr.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column(u'build', sa.Column('package_id', sa.Integer(), nullable=True))
    op.add_column(u'build', sa.Column('source_json', sa.Text(), nullable=True))
    op.add_column(u'build', sa.Column('source_type', sa.Integer(), nullable=True))
    op.add_column(u'build_chroot', sa.Column('git_hash', sa.String(length=40), nullable=True))
    ### end Alembic commands ###

    bind = op.get_bind()
    connection = bind.connect()

    package_table = sa.Table(
        "package",
        sa.MetaData(),
        sa.Column("id", sa.Integer, nullable=False),
        sa.Column("name", sa.String(100), nullable=False),
        sa.Column("copr_id", sa.Integer, nullable=False),
        sa.Column("source_type", sa.Integer, default=0),
        sa.Column("source_json", sa.Text),
    )

    build_table = sa.Table(
        "build",
        sa.MetaData(),
        sa.Column("id", sa.Integer, nullable=False),
        sa.Column("pkgs", sa.Text),
        sa.Column("copr_id", sa.Integer),
        sa.Column("package_id", sa.Integer),
    )

    for build in connection.execute(build_table.select()):
        pkg_name = parse_package_name(os.path.basename(build.pkgs))
        package = connection.execute(package_table.select().where(
                    package_table.c.name == pkg_name and package_table.c.copr_id == build.copr_id)).first()
        if not package:
            connection.execute(package_table.insert().values(
                        name = pkg_name,
                        copr_id = build.copr_id,
                        source_type = 0,
                        source_json = str({"url": build.pkgs})))
            package = connection.execute(package_table.select().where(
                        package_table.c.name == pkg_name and package_table.c.copr_id == build.copr_id)).first()
        connection.execute(build_table.update().where(build_table.c.id == build.id).values(
                    package_id = package.id))


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column(u'build_chroot', 'git_hash')
    op.drop_column(u'build', 'source_type')
    op.drop_column(u'build', 'source_json')
    op.drop_column(u'build', 'package_id')
    op.drop_table('package')
    ### end Alembic commands ###
