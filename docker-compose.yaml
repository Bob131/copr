version: '3'
services:

  # @TODO Probably not all backend services should use the same Dockerfile

  backend-log:
    build:
      context: docker/backend
    hostname: backend-log
    command: /usr/sbin/runuser -u copr -g copr -- /usr/bin/copr_run_logger.py
    depends_on:
      - redis
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - results:/var/lib/copr/public_html/results

  backend-build:
    build:
      context: docker/backend
    hostname: backend-build
    command: /usr/sbin/runuser -u copr -g copr -G obsrun -- /usr/bin/copr-run-dispatcher builds
    depends_on:
      - backend-log
      - resalloc
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - results:/var/lib/copr/public_html/results

  backend-action:
    build:
      context: docker/backend
    hostname: backend-action
    command: /usr/sbin/runuser -u copr -g copr -- /usr/bin/copr-run-dispatcher actions
    depends_on:
      - backend-log
      - resalloc
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - results:/var/lib/copr/public_html/results

  resalloc:
    build:
      context: docker/resalloc
    hostname: resalloc
    depends_on:
      - database
    command: /usr/bin/resalloc-server
    stdin_open: true
    tty: true

  redis:
    image: centos/redis-32-centos7
    hostname: redis

  backend_httpd:
    build:
      context: docker/backend_httpd
    depends_on:
      - backend-log
    hostname: backend_httpd
    ports:
      - "5002:5002"
    volumes:
      - results:/var/lib/copr/public_html/results

  builder:
    build:
      context: docker/builder
    hostname: builder
    stdin_open: true
    tty: true
    privileged: true
    volumes:
      - .:/opt/copr:z

  frontend:
    build:
      context: docker/frontend/
    hostname: frontend
    depends_on:
      - database
      - redis
    links:
      - database
    stdin_open: true
    tty: true
    ports:
      - "5000:5000"
    volumes:
      - .:/opt/copr:z

  database:
    build:
      context: docker/database/
    hostname: database
    stdin_open: true
    tty: true
    environment:
      - POSTGRESQL_USER=copr-fe
      - POSTGRESQL_PASSWORD=coprpass
      - POSTGRESQL_DATABASE=coprdb
    ports:
      - 5009:5432

  distgit:
    build:
      context: docker/distgit/
    hostname: distgit
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - dist-git:/var/lib/dist-git

  distgit-httpd:
    build:
      context: docker/distgit-httpd/
    hostname: distgit-httpd
    stdin_open: true
    tty: true
    ports:
      - "5001:80"
    volumes:
      - .:/opt/copr:z
      - dist-git:/var/lib/dist-git

  keygen-signd:
    build:
      context: docker/keygen-signd/
    hostname: keygen-signd
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - copr-keygen:/var/lib/copr-keygen

  keygen-httpd:
    build:
      context: docker/keygen-httpd/
    hostname: keygen-httpd
    stdin_open: true
    tty: true
    volumes:
      - .:/opt/copr:z
      - copr-keygen:/var/lib/copr-keygen

volumes:
  results:
  copr-keygen:
  dist-git:
